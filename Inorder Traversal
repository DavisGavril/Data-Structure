#include <stdio.h>
#include <stdlib.h>
typedef struct TreeNode
{
    int data;
    struct TreeNode* left;
    struct TreeNode* right;
} 
TreeNode;
TreeNode* createNode(int data) 
{
    TreeNode* newNode = (TreeNode*)malloc(sizeof(TreeNode));
    newNode->data = data;
    newNode->left = NULL;
    newNode->right = NULL;
    return newNode;
}
void inorderTraversal(TreeNode* root) 
{
    if (root == NULL) 
   {
        return;
    }
    inorderTraversal(root->left);    
     printf("%d ", root->data);       
    inorderTraversal(root->right);   
}
TreeNode* insertNode(TreeNode* root, int data)  
   {
    if (root == NULL) 
     {
        return createNode(data);
    }
    if (data < root->data) 
    {
        root->left = insertNode(root->left, data);
    } else if (data > root->data)  
    {
        root->right = insertNode(root->right, data);
    }
    return root;
}
int main() 
{
    TreeNode* root = NULL;
    root = insertNode(root, 50);
    insertNode(root, 30);
    insertNode(root, 20);
    insertNode(root, 40);
    insertNode(root, 70);
    insertNode(root, 60);
    insertNode(root, 80);
    printf("In-order traversal of the binary tree:\n");
    inorderTraversal(root);
    printf("\n");

    return 0;
}
