#include <stdio.h>
#include <stdlib.h>
typedef struct Node {
    int data;              // Value stored in the node
    struct Node* left;     // Pointer to the left child
    struct Node* right;    // Pointer to the right child
} Node;
Node* createNode(int value) {
    Node* newNode = (Node*)malloc(sizeof(Node));
    if (newNode == NULL) {
        printf("Memory allocation failed\n");
        exit(1);
    }
    newNode->data = value;
    newNode->left = NULL;
    newNode->right = NULL;
    
    return newNode;
}
void postOrderTraversal(Node* root) {
    if (root != NULL) {
        postOrderTraversal(root->left);
        postOrderTraversal(root->right);
        printf("%d ", root->data);
    }
}

int main() {
    Node* root = createNode(12);        
    root->left = createNode(7);           
    root->right = createNode(15);         
    root->left->left = createNode(5);     
    root->left->right = createNode(6);
    root->right->left = createNode(14);   
    root->right->right = createNode(11); 

    printf("Post-order traversal: ");
    postOrderTraversal(root);
    printf("\n");
    
    return 0;
}
